Hungarian\ pollution=overusing type prefixes in variable names.
What\ is\ a\ product\ backlog\ in\ agile\ project\ management?=prioritized list of features, enhancements, bug fixes, and other work items that need to be addressed in a product.
dispatcher=system or person that ensures efficiency by distributing resources, tasks, and information.
UI\ dialog=secondary window used to display information or prompt user action.
abstract\ class=both shows what methods the extending classes has to implement and can implement some shared code.
abstraction\ (1)=process of hiding complex implementation details and showing only the necessary features.
abstraction\ (2)=helps to manage complexity by hiding implementation details and exposing only essential features.
abstraction\ (3)=examples\: Interfaces, Abstract Classes, Modules and Packages, APIs (Application Programming Interfaces), Design Patterns (e.g., Facade Pattern, Decorator Pattern), Layered Architecture, Frameworks and Libraries, Database ORM (Object-Relational Mapping), Microservices, Virtual Machines and Containers.
bounded=having specific business areas and functions (distinct from other contexts), isolation (no direct impact on other contexts), contextual meaning (terms and concepts are unambiguous only within the context), and autonomy (independent evolution and management).
cohesion=degree to which elements of a module or class are related and work together to achieve a single purpose.
cohesion\ example=A UserManager class with methods createUser, deleteUser, and updateUser has high cohesion, focusing solely on user management.
context\ (Bounded\ Context)=A defined boundary within the domain that isolates a particular model and ensures consistent terminology and rules within that specific area.
coupling=degree of interdependence between software modules.
high\ coupling\ example=class A uses the whole class B, instead of just using some string that is needed from class B field.
interface=an intermediate between user and internal functionality; serves as both abstraction and boundary.
interface\ in\ java=only shows what methods the implementing classes has to implement.
key\ Components\ of\ Continuous\ Integration=VCS (e.g. Git), automated builds for compiling and error checking, automated tests, continuous feedback for immediate issue resolution, and a build server (e.g., Jenkins) to monitor VCS and trigger builds/tests.
modal\ window=UI element that blocks interaction with the rest of the interface until closed.
non-semantic\ message=you essentially strip away the contextual and descriptive information, leaving behind only the raw data without additional meaning or context.
semantic\ message=raw data + metadata
ubiquitous\ language=shared, common, used by both domain experts and developers to describe and discuss the domain model.
diamond\ operator\ \(Java\)=copies the variable type from the left side to avoid repeating it; marked by <>.
cross\ architecture=making sure components fit well: front, back, data, infrastructure and security
AD=architecture description.
Aspect=oriented programming - way to separate functionality. Example\: logging specific method can be triggered from separate class.
Assemble=specific phase within the build process - collecting and combining individual components into larger units.
Boilerplate=sections of code that have to be included in many places with little or no alteration.
CDD=Customer Due Dilligence - performing customer checks.
CHROMIUM=base upon which many modern web browsers are built.
CI=Configuration Item - any component that needs to be managed in order to deliver an IT service.
CI/CD\ pipeline=continuous - integration, delivery, deployment.
Code\ integration=combining code changes from multiple contributors into a shared repository.
Collision\ resistant=different inputs should not produce the same outcome.
DNS=Domain Name System - maps user - friendly domain names to numeric IP addresses.
DPIA=Data Protection Impact Assessment - process identifying and minimising risks of the processing of personal data.
DevOps=practices, principles, and cultural philosophies. The primary goal is to automate the process of software delivery and infrastructure changes.
DevSecOps=practice of integrating security seamlessly into every phase of the software development and delivery pipeline.
Difference\ between\ Kafka\ and\ Kubernetes\ in\ the\ sense\ that\ both\ are\ platforms\ of\ orchestration=Kafka is the data traffic controller, while Kubernetes is the container traffic controller.
Encapsulation=Hiding internal elements of object or service. Provides clear separation. Improves maintainability.
Etcd=configuration data shared among nodes in a distributed system.
Etcd\ etymology="et cetera" + "distributed" - comes from the /etc directory in Linux for configuration.
F5=advanced load balancer and application traffic controller.
F5\ rules=logic to control service traffic (access, balance and security)
Factory\ design\ pattern=provides an interface for creating instances of a class, allowing subclasses to alter the type of objects that will be created.
Firewall=network security system that monitors and controls incoming and outgoing network traffic based on predetermined rules.
Firewall\ opening=configuration change to allow specific traffic through the firewall, enabling communication over a given port or IP range.
Framework=reusable and extensible structure that helps building applications.
GCT=general compliance testing - testing processes to meet standards and regulations.
Gateway=A computer that sits between different networks or applications. The gateway converts data from one protocol format to another.
Gateway\ team\ in\ an\ enterprise=ensures a secure digital environment by managing network security, access controls, and incident response protocols to safeguard data effectively.
Ingress\ Controller=Kubernetes component that manages external access to services.
Jar\ hell=challenges arising from conflicts or compatibility issues between different versions of Java Archive (JAR) files, often encountered in projects with multiple dependencies.
Jenkins=automating tasks like code integration, testing, and deployment.
Kafka\ (1)=a platform orchestrating data flow
Kafka\ (2)=distributed event streaming platform for high-throughput, fault-tolerant data pipelines.
Kafka\ (3)=a platform orchestrating real-time, asynchronous communication between services, ensuring scalable, reliable data flow and event logging.
Memoization\ technique=storing the results of expensive function calls and return the cached result when the same inputs occur again.
Microsoft\ Azure=cloud computing platform.
OKR=objectives and key requirements.
ORM=Object-Relational Mapping - interaction between a database and OOP. database operations are performed using objects and classes rather than raw SQL queries. E.g.\: Hibernate for Java.
PI\ Planning=Program Increment Planning.
PI\ planning=Program Increment planning - aligns teams, sets objectives, and plans iterations collaboratively.
PR=public release.
Postmortem=structured analysis that takes place after a failure has occurred.
RBAC=role based access control - system of user access rights based on their role within an organization.
Real-time\ data\ flow=Continuous, asynchronous transfer and processing of data as events occur
SSL\ (1)=Secure Sockets Layer - standard security protocol that encrypts the communication between a web server and a browser to protect sensitive information.
SSL\ (2)=Secure Sockets Layer - protects communication over a network or internet. Encrypts the data between browser and website server. Successor - Transport Layer Security - TLS.
Sticky\ session=ensures a user's requests are routed to the same server (no need to transfer copies of session data, Java classes donâ€™t need serialization).
Subnet=subnetwork - segment of a larger network. Subnetting improves network performance, security, and organization.
SwiftUI=user interface framework developed by Apple for building apps across iOS, macOS, watchOS, and tvOS.
TDC=test data compliance - test data meets standards and regulations.
Technical\ debt=accumulated code imperfections.
Unix=operating system. Linux is a Unix - like, but not a direct descendant.
VIP\ (OpenShift)=Virtual IP - routes traffic to services or pods within a cluster, often for load balancing.
VPN=Virtual Private Network - encrypted and tunneled connection to trusted remote server, where your identity is hidden, but all the data in the internet accessed.
VPN\ Whitelisting=a security measure that allows only specific IP addresses or devices to access a service through a VPN.
Wireshark=app for network troubleshooting.
asynchronous=each next task starts without previous one ending. Task become concurrent.
build=entire process for execution - compiling source files, linking libraries, and packaging resources into a distributable format
credential=username, password, or token, used to authenticate and authorize a user.
defensive\ programming=ensuring that software behaves as expected even when encountering unexpected inputs or conditions. Input validation, Error handling, Robustness, Fail-safe defaults, Clear documentation.
deploying=making app available on a target environment. For example production environment.
deterministic=same input will always produce the same outcome.
git\ stash=\ to temporarily save changes (that are not ready to be committed) to a temporary storage, that can be retrieved later.
hash=unique representation of the input data. Used for encryption, integrity verification, indexing etc. Deterministic, fixed output size, irreversible, collision resistant.
hashing=transforming data into a fixed-size code. Deterministic. One hash code can mean multiple original data (collision case).
hub=central point, where things are executed.
irreversible\ data\ transformation=not possible to obtain the original input from the outcome.
landing\ page=entry point for a particular section of a website. Prompts a specific action from visitors, such as making a purchase, signing up for a newsletter, downloading a resource, or filling out a form.
node=machine with individual instance.
operational\ risk=risk of loss in the result of\: internal process, people, system, external events.
operations\ specialist=takes care of IT infrastructure\: severs, networks, hardware. Deploys and configures software apps
overlay=(web) - graphical element that is superimposed on top of another elements, typically to display additional content or provide a focused interaction area.
pipeline=process of building, testing and deploying. Often associated with automatisation.
present()=method in fluentlenium that checkts if the element is there in the DOM.
synchronous=each next task starts when previous one ends.
.war\ file=Web Application Archive - packaging format used for distributing and deploying web applications in the Java ecosystem. Similar to .jar file.
Bean\ factory/\ Application\ context=dependency injection container in Spring.
Component\ scanning=method of configuration\: annotations added to classes, attributes, and methods. Helps defining bean.
DRY=Don't Repeat Yourself - programming principle.
DSL=Domain-Specific Language - syntax, designed for a specific problem domain, as opposed to being a general-purpose. Example\: Thymeleaf provides DSL for HTML.
Hibernate=ORM framework for the Java - forerunner of JPA.
IoC=Inversion of Control - design principle - object creation and lifecycle is inverted or delegated to a container or framework, as opposed to being handled by the objects themselves.
JDBC=Java Database Connectivity - Java-based API that provides a standard interface for connecting to relational databases and executing SQL queries.
JPA=Java Persistence API - Java specification for managing relational data in Java applications. It provides a standard way to map Java objects to database tables and vice versa.
JPQL=Java Persistence Query Language - interacts with databases in a platform-independent way. Automatic translation to actual SQL query depending on platform. Used with JPA.
JSP=Java Server Pages - allows Java code directly within HTML pages. Provides tags for iteration, conditionals, and formatting.
Java\ beans=simple objects with only getters and setters for the attributes.
Liferay=portal and content management system (CMS) written in Java. Provides a platform for building websites and various web apps.
metadata=describes various aspects of data, such as its format, source, purpose, quality, and relationships with other data.
POJO=Plain Old Java Object - Java class that does not extend or implement any specialized classes or interfaces from frameworks or libraries.
pointcut=set of criteria that defines a certain point in the execution of a program.
proxy\ pattern=creating placeholders for another object to control access to it, but it doesn't necessarily mean creating copies of the target object.
RDBMS=relational database management system.
servlet\ container=handles multithreading and lifecycle of servlets. Examples\: Jetty, Apache Tomcat.
servlet/controller/MVC=Model View Controller - handles user input, process it, and update the model or view.
Spring\ beans=POJOs configured in the application context.
Spring\ boot=part of Spring (Java framework) specific for creating web app back end.
state=current values of fields of an object.
web=WWW - content over the internet. Including platform and protocols.
web\ container=servlet container or servlet engine - component of a server that manages the execution of servlets and Java Server Pages (JSP).
web\ portal=platform - provides access to services.
what\ is\ stereotype\ in\ Spring=role of class, marked by annotation. E.g.\: @Controller @Service
FDP=frontend development platform (example\: React).
JSON=JavaScript Object Notation - is a text-based data format representing objects, used for easy data exchange between systems.
JSX=JavaScript as XML - is an HTML-like syntax used in React to create UI elements.
JWT=JSON Web Token - compact, URL-safe token format used to securely encode, verify, and transmit information between parties, commonly for authentication and authorization purposes.
URL\ safe\ format=avoids special characters, making data suitable for transmission in URLs.
token=secure, encoded string used to represent authentication, authorization, or session information digitally.