Andromeda=app development platform also for deployment and operation of cloud-native applications. Runs on OpenShift.
base\ Java\ Docker\ image=foundation image with Java runtime for running apps in containers.
cloud=internet-based services like storage, compute, databases—no local hardware needed.
cluster=all nodes.
container=isolated unit with app code, dependencies, and settings.
container\ instance=running version of an image.
container\ image=package with code, runtime, libs, tools—ready to run.
container\ management\ platform=software system for deploying, scaling, and orchestrating containers across cluster.
container\ runtime=software component that runs and isolates container processes.
DC=data center — building housing IT systems.
DC\ components=includes telecommunications, storage, backup power, redundant connections, cooling, etc.
Docker=container runtime.
endpoint=specific address or location in a network where communication or data transfer can occur.
garbage\ collection=is an automated process that identifies and frees up memory.
Hazelcast=software distributing data and compute over nodes; offers parallel processing and in-memory data grid.
IMDG=in-memory data grid - distributed computing technology that stores and manages data in RAM memory; fast access.
Helm=package manager for Kubernetes - sets up and manages applications using Helm charts.
Helm\ chart=packages containing: container images, services, deployments, and configuration files.
package=set of files or resources bundled for software deployment.
Andromeda\ container\ deployment=Andromeda runs applications inside containers deployed in a Kubernetes cluster.
OpenShift\ vs\ Kubernetes?=OpenShift is built on top of Kubernetes, extending its capabilities with additional features.
Rancher\ platform=management platform for container orchestration and Kubernetes.
Rancher\ features=provides user-friendly interface and tools for deployment and configuration.
Kubernetes=container orchestration platform.
managed\ services=subset of services that focus on ongoing management, maintenance, and support.
managed\ services\ of\ Andromeda=Containers, monitoring, logging, traceability, caching, etc.
master\ node=responsible for managing the overall cluster state.
microservice=independent part of application for a specific function.
NFS=Network File System - for accessing files over a network as if they were on a local file system.
namespace\ (1)=In networking, namespaces can refer to isolated environments where different systems or applications can have their own unique identifiers without conflicting with others.
namespace\ (2)=way to divide cluster resources between multiple users (or multiple projects or teams) on a single cluster. Within a namespace, you can have pods, services, deployments, and other resources.
OpenShift=container orchestration platform - automates the development, deployment, and management of containerized applications. Built on Kubernetes.
PV=Persistent Volume - storage resource that exists independently of a container. Managed by administrator/ platform.
PVC=Persistent Volume Claim - request for PV storage by a user.
pod=smallest deployable unit. It can hold one or more containers.
port=communication endpoint.
Rancher=container management platform - manages workloads, deploys, scales containerized applications. Uses container runtime Kubernetes (Docker or other). Sets it's clusters.
runtime=1. environment providing the necessary components to execute an app. 2. period during which a program is executing.
SSH=Secure Shell key - pair of cryptographic keys (public and private) - used to authenticate and secure communication over a network.
throttling=intentional limitation or control of certain resources, actions, or processes within an app or a system.
worker\ node=computing node dedicated to running the containerized applications, has its own CPU, memory, and other resources.
YAML=(YAML Ain't Markup Language) - is a human-readable data serialization format. Like XML or JSON.
secret=kubernetes resource to store sensitive data as a key value pair in etcd. secrets can be read by cluster admins, namespace admins, users with RBAC permissions
F5=advanced load balancer and application traffic controller.
F5\ rules=logic to control service traffic (access, balance and security)
etcd=configuration data shared among nodes in a distributed system.
etcd\ etymology="et cetera" + "distributed" - comes from the /etc directory in Linux for configuration.
VIP\ (OpenShift)=Virtual IP - routes traffic to services or pods within a cluster, often for load balancing.
