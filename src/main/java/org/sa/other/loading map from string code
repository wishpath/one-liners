  private static Map<String, String> createKeyDefinitionMap(String allOneLiners) {
    return Arrays.stream(allOneLiners.split("\n"))
                 .filter(line -> line.contains(" - "))
                 .map(Functions::extractEntryFromLine)
                 .sorted(Comparator.comparing(Map.Entry::getKey))
                 .collect(Collectors.toMap(
                   Map.Entry::getKey,
                   Map.Entry::getValue,
                   Functions::handleDuplicateKeys
                 ));
  }

  private static Map.Entry<String, String> extractEntryFromLine(String line) {
    int delimiterIndex = line.indexOf(" - ");
    if (delimiterIndex == -1) {
      throw new IllegalArgumentException("String does not contain the delimiter: " + line);
    }
    String key = line.substring(0, delimiterIndex);
    String value = line.substring(delimiterIndex + 3);
    return Map.entry(key, value);
  }

  private static String handleDuplicateKeys(String existingValue, String newValue) {
    System.out.println("Duplicate key found, skipping entry with key: " + existingValue);
    return existingValue;
  }